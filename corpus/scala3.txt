===================================
Macro expressions
===================================

def string(arg: Int) = 
  ${ '{ ${ yesh('arg) } } }

---

(compilation_unit
  (function_definition
    (identifier)
    (parameters
      (parameter
        (identifier)
        (type_identifier)))
    (macro_splice_expression
      (macro_quote_expression
        (macro_splice_expression
          (call_expression
            (identifier)
            (arguments
              (symbol_literal))))))))


==================================
Opaque type aliases (Scala 3)
==================================

opaque type A = Int
private opaque type B = String

---

(compilation_unit
  (type_definition 
    (opaque_modifier) (type_identifier) (type_identifier))

  (type_definition 
    (modifiers (access_modifier))
    (opaque_modifier) 
    (type_identifier) 
    (type_identifier))
)


